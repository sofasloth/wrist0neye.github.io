{"title":"[python] 문자열 치환 총 정리 및 성능 비교하기(str.translate, str.replace, re.sub)","type":"article","url":"https://dogsavestheworld.tistory.com/entry/python-%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%B9%98%ED%99%98-%EC%B4%9D-%EC%A0%95%EB%A6%AC-%EB%B0%8F-%EC%84%B1%EB%8A%A5-%EB%B9%84%EA%B5%90%ED%95%98%EA%B8%B0strtranslate-strreplace-resub","image":"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdDO4VE%2FbtrZbrkDAnv%2FMmsVZxfpHOmNDQXY4iPJmK%2Fimg.png","image_secure_url":null,"image_type":null,"image_width":null,"image_height":null,"image_alt":null,"video":null,"video_secure_url":null,"video_type":null,"video_width":null,"video_height":null,"audio":null,"audio_secure_url":null,"audio_type":null,"description":"목차 Intro 데이터 전처리 과정은 분석 결과/ 모델 성능에 중요한 영향을 미치기에, 데이터 전처리 과정에서 데이터 정제에 속하는 문자열을 치환하는 방법을 제대로 이해하고자 합니다. 파이썬 문자열 내장 함수인 str.translate(), str.replace(), 그리고 re 모듈을 활용한 re.sub을 이용한 문자열 치환 방법을 알아보겠습니다. * 데이터 전처리: 데이터 정제 > 결측값 처리 > 이상값 처리 > 분석 변수 처리순으로 진행됨 * 데이터 정제: 결측값(missing value)을 채우거나 이상값(outlier)을 제거하는 과정으로 데이터의 신뢰도를 높이는 작업 str.translate s = '\\nNew Jeans\\t' table = s.maketrans({'\\n':'', '\\t':''..","determiner":null,"locale":null,"locale_alternate":null,"site_name":"KEEP GOING","domain":"dogsavestheworld.tistory.com"}